spring:
  application:
    name: oauth2-service
  datasource:
    url: jdbc:mysql://oauth2.k8m.k8cluster.io:3306/oauth2?useSSL=false
    username: root
    password: oauth2
    initialization-mode: always
    validationQuery: SELECT 1
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  queries:
    users-query: select email, password, active from user where email=?
    roles-query: select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
info:
  component: Oauth2 Service running on ${VHOSTNAME:${HOSTNAME:localhost}}

server:
  port: ${VPORT:9000}
  context-path: ${VPATH:/oauth2-base}


security:
  oauth2:
    client:
      client-id: oauth2-service-client
      client-secret: pass
      authorized-grant-types: authorization_code,password,client_credentials,implicit,refresh_token
      scope: read,write
#  user:
#    name: oauth2-user
#    password: password
